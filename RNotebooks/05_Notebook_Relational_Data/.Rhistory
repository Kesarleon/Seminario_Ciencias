list_key<-as.character(unique(dataset$key))
i<-1
list_key[i]
company<- subset(dataset, key==list_key[i])
View(company)
company_out<-NULL
mode(company$Name)
mode(company$Name)
company$Name
table(company$Name)
table(as.character(company$Name))
table(as.character(company$Name))[1]
table(as.character(company$Name))[[1]]
colnames(table(as.character(company$Name)))
table(as.character(company$Name))
unlist(table(as.character(company$Name)))
freq_terms(company$Name, 1)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
aggregate(name ~ key, company, Mode)
aggregate(Name ~ key, company, Mode)
Name<- aggregate(Name ~ key, dataset, Mode)
View(Name)
write.csv(Name, '/Users/alimon/Documents/dataset/Yahoo/cleaned_name.csv', row.names = FALSE)
View(Name)
Industry<- aggregate(Industry ~ key, dataset, Mode)
View(Industry)
Sector<- aggregate(Sector ~ key, dataset, Mode)
View(Sector)
dataset_entity_industry<- as.data.frame(dataset$key)
dataset_entity_industry<- as.data.frame(unique(dataset$key))
dataset_entity_industry$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
View(dataset_entity_industry)
colnames(dataset_entity_industry)[1]<-"constructed_key"
dataset_entity_industry<- merge(dataset_entity_industry, Name, by.x='constructed_key', by.y = "key")
View(dataset_entity_industry)
dataset_entity_industry<- merge(dataset_entity_industry, Sector, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Industry, by.x='constructed_key', by.y = "key")
View(dataset_entity_industry)
dataset_entity_industry$constructed_key<-NULL
write.csv(dataset_entity_industry, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_industry.csv', row.names = FALSE)
write.csv(dataset_entity_industry, '/Users/alimon/Documents/dataset/Yahoo/dataset/dataset_comp_industry.csv', row.names = FALSE)
dataset_entity_industry<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_industry)[1]<-"constructed_key"
dataset_entity_industry$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
#dataset_entity_industry<- merge(dataset_entity_industry, Name, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Sector, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Industry, by.x='constructed_key', by.y = "key")
dataset_entity_industry$constructed_key<-NULL
write.csv(dataset_entity_industry, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_industry.csv', row.names = FALSE)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
Address<- aggregate(Address ~ key, dataset, Mode)
City<- aggregate(City ~ key, dataset, Mode)
State<- aggregate(State ~ key, dataset, Mode)
zip<- aggregate(zip ~ key, dataset, Mode)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- as.data.frame(unique(dataset$key))
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key")
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key")
Country<- aggregate(Country ~ key, dataset, Mode)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key")
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key")
dataset_entity_profile$constructed_key<-NULL
write.csv(dataset_entity_profile, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv', row.names = FALSE)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile$constructed_key<-NULL
write.csv(dataset_entity_profile, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv', row.names = FALSE)
version
library(dplyr)
dataset<- read.csv('/Users/alimon/Documents/dataset/Yahoo/dataset.csv')
dataset<- subset(dataset, Industry!='')
dataset$key<- paste0(dataset$Address, dataset$Country)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#### 1
Industry<- aggregate(Industry ~ key, dataset, Mode)
Sector<- aggregate(Sector ~ key, dataset, Mode)
dataset_entity_industry<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_industry)[1]<-"constructed_key"
dataset_entity_industry$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
#dataset_entity_industry<- merge(dataset_entity_industry, Name, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Sector, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Industry, by.x='constructed_key', by.y = "key")
dataset_entity_industry$constructed_key<-NULL
write.csv(dataset_entity_industry, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_industry.csv', row.names = FALSE)
#### 2
Name<- aggregate(Name ~ key, dataset, Mode)
Address<- aggregate(Address ~ key, dataset, Mode)
City<- aggregate(City ~ key, dataset, Mode)
Country<- aggregate(Country ~ key, dataset, Mode)
State<- aggregate(State ~ key, dataset, Mode)
zip<- aggregate(zip ~ key, dataset, Mode)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile$constructed_key<-NULL
write.csv(dataset_entity_profile, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv', row.names = FALSE)
dataset_sec<- dataset %>% select(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding)
dataset_sec<- dataset %>% distinct(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding)
dataset_sec<- dataset %>% distinct(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding) %>% select(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding)
View(dataset_sec)
dataset_sec$key<- as.data.frame(unique(dataset$key))
dataset_sec$key<- paste0("comp", "_",seq(1,length(unique(dataset_sec))))
dataset_sec$key<- paste0("sec", "_",seq(1,length(unique(dataset_sec$Ticker))))
View(dataset_sec)
write.csv(dataset_sec, '/Users/alimon/Documents/dataset/Yahoo/dataset_sec.csv', row.names = FALSE)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
View(dataset_sec_comp)
dataset_sec<- select(dataset_sec, Ticker, key)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
View(dataset_sec_comp)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- select(dataset_entity_profile, Name, key)
View(dataset_sec_comp)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'key.y', all.x = TRUE)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'key', all.x = TRUE)
View(dataset_sec_comp)
dataset_entity_profile<- select(dataset_entity_profile, Name, key)
dataset_sec<- select(dataset_sec, Ticker, key)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
View(dataset_sec_comp)
View(dataset_entity_profile)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, key)
dataset_sec<- select(dataset_sec, Ticker, key)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'key', all.x = TRUE)
View(dataset_sec_comp)
View(dataset_entity_profile)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'constructed_key', all.x = TRUE)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'constructed_key', all.x = TRUE)
View(dataset_sec_comp)
dataset<- filter(dataset, key!='')
View(dataset)
dataset<- read.csv('/Users/alimon/Documents/dataset/Yahoo/dataset.csv')
dataset<- subset(dataset, Industry!='')
dataset$key<- paste0(dataset$Address, dataset$Country)
View(dataset)
dataset<- filter(dataset, key!='')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#### 1
Industry<- aggregate(Industry ~ key, dataset, Mode)
Sector<- aggregate(Sector ~ key, dataset, Mode)
dataset_entity_industry<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_industry)[1]<-"constructed_key"
dataset_entity_industry$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
#dataset_entity_industry<- merge(dataset_entity_industry, Name, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Sector, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Industry, by.x='constructed_key', by.y = "key")
dataset_entity_industry$constructed_key<-NULL
write.csv(dataset_entity_industry, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_industry.csv', row.names = FALSE)
#### 2
Name<- aggregate(Name ~ key, dataset, Mode)
Address<- aggregate(Address ~ key, dataset, Mode)
City<- aggregate(City ~ key, dataset, Mode)
Country<- aggregate(Country ~ key, dataset, Mode)
State<- aggregate(State ~ key, dataset, Mode)
zip<- aggregate(zip ~ key, dataset, Mode)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile$constructed_key<-NULL
write.csv(dataset_entity_profile, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv', row.names = FALSE)
dataset_sec<- dataset %>% distinct(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding) %>% select(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding)
dataset_sec$key<- paste0("sec", "_",seq(1,length(unique(dataset_sec$Ticker))))
write.csv(dataset_sec, '/Users/alimon/Documents/dataset/Yahoo/dataset_sec.csv', row.names = FALSE)
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, key)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, key)
dataset_sec<- select(dataset_sec, Ticker, key)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'constructed_key', all.x = TRUE)
View(dataset_sec_comp)
View(dataset_sec_comp)
dataset_sec_comp<- select(dataset_sec_comp, key.y, key)
View(dataset_sec_comp)
colnames(dataset_sec_comp)
colnames(dataset_sec_comp)<- c('sec_id','comp_id')
write.csv(dataset_sec_comp, '/Users/alimon/Documents/dataset/Yahoo/dataset_sec_comp', row.names = FALSE)
write.csv(dataset_sec_comp, '/Users/alimon/Documents/dataset/Yahoo/dataset_sec_comp.csv', row.names = FALSE)
View(dataset)
knitr::opts_chunk$set(echo = TRUE)
comp_profile<-read.csv('/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv')
View(comp_profile)
comp_profile %>%
count(key)
library(dplyr)
comp_profile %>%
count(key)
unique(comp_profile$key)
comp_profile %>%
count(key) %>%
filter(n > 1)
nrows(comp_profile %>% count(key) %>% filter(n > 1))
nrow(comp_profile %>% count(key) %>% filter(n > 1))
library(dplyr)
dataset<- read.csv('/Users/alimon/Documents/dataset/Yahoo/dataset.csv')
dataset<- subset(dataset, Industry!='')
dataset$key<- paste0(dataset$Address, dataset$Country)
dataset<- filter(dataset, key!='')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#### 1
Industry<- aggregate(Industry ~ key, dataset, Mode)
Sector<- aggregate(Sector ~ key, dataset, Mode)
dataset_entity_industry<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_industry)[1]<-"constructed_key"
dataset_entity_industry$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
#dataset_entity_industry<- merge(dataset_entity_industry, Name, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Sector, by.x='constructed_key', by.y = "key")
dataset_entity_industry<- merge(dataset_entity_industry, Industry, by.x='constructed_key', by.y = "key")
dataset_entity_industry$constructed_key<-NULL
colnames(dataset_entity_industry)
colnames(dataset_entity_industry)[1]<- 'comp_id'
write.csv(dataset_entity_industry, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_industry.csv', row.names = FALSE)
#### 2
Name<- aggregate(Name ~ key, dataset, Mode)
Address<- aggregate(Address ~ key, dataset, Mode)
City<- aggregate(City ~ key, dataset, Mode)
Country<- aggregate(Country ~ key, dataset, Mode)
State<- aggregate(State ~ key, dataset, Mode)
zip<- aggregate(zip ~ key, dataset, Mode)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile$constructed_key<-NULL
comp_profile<-comp_profile %>% mutate(row_number(Name), surrogate_key)
comp_profile<-comp_profile %>% mutate(row_number(Name))
View(comp_profile)
comp_profile$`row_number(Name)`<- NULL
comp_profile<-comp_profile %>% mutate(surrogated_key=row_number(Name))
View(comp_profile)
colnames(dataset_entity_profile)[1]<- 'comp_id'
write.csv(dataset_entity_profile, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv', row.names = FALSE)
dataset_sec<- dataset %>% distinct(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding) %>% select(Ticker, Exchange,financialCurrency,currentPrice, sharesOutstanding)
dataset_sec$key<- paste0("sec", "_",seq(1,length(unique(dataset_sec$Ticker))))
dataset_sec$key<- NULL
dataset_sec$sec_id<- paste0("sec", "_",seq(1,length(unique(dataset_sec$Ticker))))
write.csv(dataset_sec, '/Users/alimon/Documents/dataset/Yahoo/dataset_sec.csv', row.names = FALSE)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, key)
dataset_sec<- select(dataset_sec, Ticker, key)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, key)
dataset_sec<- select(dataset_sec, Ticker, key)
dataset_sec<- select(dataset_sec, Ticker,sec_id)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key.x', by.y = 'constructed_key', all.x = TRUE)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='sec_id', by.y = 'constructed_key', all.x = TRUE)
dataset_sec_comp<- select(dataset_sec_comp, key.y, key)
View(dataset_sec_comp)
View(dataset_sec_comp)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile$constructed_key<-NULL
colnames(dataset_entity_profile)
colnames(dataset_entity_profile)[1]<- 'comp_id'
dataset_entity_profile$constructed_key<-NULL
write.csv(dataset_entity_profile, '/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv', row.names = FALSE)
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, comp_id)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
colnames(dataset_entity_profile)[1]<- 'comp_id'
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, comp_id)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
colnames(dataset_entity_profile)
colnames(dataset_entity_profile)[2]<- 'comp_id'
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, comp_id)
dataset_sec<- select(dataset_sec, Ticker,sec_id)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='sec_id', by.y = 'constructed_key', all.x = TRUE)
View(dataset_sec_comp)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
colnames(dataset_entity_profile)[2]<- 'comp_id'
View(dataset_entity_profile)
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, comp_id)
View(dataset_entity_profile)
dataset_sec<- select(dataset_sec, Ticker,sec_id)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
View(dataset_sec_comp)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='sec_id', by.y = 'constructed_key', all.x = TRUE)
View(dataset_sec_comp)
dataset_entity_profile<- as.data.frame(unique(dataset$key))
colnames(dataset_entity_profile)[1]<-"constructed_key"
dataset_entity_profile$key<- paste0("comp", "_",seq(1,length(unique(dataset$key))))
dataset_entity_profile<- merge(dataset_entity_profile,Name, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Address, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, City, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, Country, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, State, by.x='constructed_key', by.y = "key", all.x = TRUE)
dataset_entity_profile<- merge(dataset_entity_profile, zip, by.x='constructed_key', by.y = "key", all.x = TRUE)
colnames(dataset_entity_profile)[2]<- 'comp_id'
#### Run part of entity profile until before the constructed key
dataset_entity_profile<- select(dataset_entity_profile, constructed_key, comp_id)
dataset_sec<- select(dataset_sec, Ticker,sec_id)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
View(dataset_entity_profile)
View(dataset_entity_industry)
View(dataset_entity_profile)
View(dataset_sec_comp)
View(dataset_entity_industry)
View(dataset_entity_profile)
dataset_entity_profile$constructed_key<- as.character(dataset_entity_profile$constructed_key)
dataset_sec_comp$constructed_key<- as.character(dataset_entity_profile$constructed_key)
dataset_sec_comp$constructed_key<- as.character(dataset_sec_comp$constructed_key)
dataset_sec_comp$key<- as.character(dataset_sec_comp$key)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key', by.y = 'constructed_key', all.x = TRUE)
dataset_sec_comp<- select(dataset_sec_comp, key.y, key)
View(dataset_sec_comp)
#dataset_sec_comp<- select(dataset_sec_comp, key.y, key)
colnames(dataset_sec_comp)<- c('sec_id','comp_id')
View(dataset_sec_comp)
View(dataset_sec)
dataset_sec_comp<- select(dataset_sec_comp, sec_id, comp_id)
dataset_sec<- select(dataset_sec, Ticker,sec_id)
dataset_sec_comp<- merge(dataset, dataset_sec, by='Ticker')
dataset_sec_comp$key<- as.character(dataset_sec_comp$key)
dataset_sec_comp<- merge(dataset_sec_comp, dataset_entity_profile, by.x='key', by.y = 'constructed_key', all.x = TRUE)
dataset_sec_comp<- select(dataset_sec_comp, sec_id, comp_id)
View(dataset_sec_comp)
write.csv(dataset_sec_comp, '/Users/alimon/Documents/dataset/Yahoo/dataset_sec_comp.csv', row.names = FALSE)
comp_profile<-read.csv('/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv')
#### Numero de observaciones con duplicados
nrow(comp_profile %>% count(key) %>% filter(n > 1))
#### Numero de observaciones con duplicados
nrow(comp_profile %>% count(comp_id) %>% filter(n > 1))
comp_profile<-comp_profile %>% mutate(surrogated_key=row_number(Name))
view(comp_profile)
head(comp_profile)
comp_profile<-read.csv('/Users/alimon/Documents/dataset/Yahoo/dataset_comp_profile.csv')
#### Numero de observaciones con duplicados
nrow(comp_profile %>% count(comp_id) %>% filter(n > 1))
comp_profile<-comp_profile %>% mutate(surrogated_key=paste0('sur_key',row_number(Name))
)
comp_profile<-read.csv('./dataset_comp_profile.csv')
comp_profile<-read.csv('/dataset_comp_profile.csv')
comp_profile<-read.csv('dataset/dataset_comp_profile.csv')
sec_universe<-read.csv('dataset/dataset_sec.csv')
View(sec_universe)
company_security<-read.csv('dataset/dataset_sec_comp.csv')
sec_universe %>%  left_join(company_security, by = "sec_id")
sec_universe_comp<- sec_universe %>%  left_join(company_security, by = "sec_id")
head(sec_universe_comp)
View(sec_universe_comp)
sec_universe_comp<- merge(sec_universe, company_security, by.x = 'sec_id', by.y='sec_id')
sec_universe_comp<- sec_universe_comp %>% arrange(sec_id)
head(sec_universe_comp)
sec_universe_comp<- sec_universe_comp %>% arrange(ticker)
sec_universe_comp<- sec_universe_comp %>% arrange(Ticker)
head(sec_universe_comp)
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
4, "y3"
)
View(x)
x %>%
inner_join(y, by = "key")
df1 <- tribble(
~x, ~y,
1,  1,
2,  1
)
df2 <- tribble(
~x, ~y,
1,  1,
1,  2
)
intersect(df1, df2)
comp_profile$comp_id<- NULL
comp_profile<-read.csv('dataset/dataset_comp_profile.csv')
comp_profile_sub<- comp_profile
### Suponemos que la llave comp_id no existe
comp_profile_sub$comp_id<- NULL
